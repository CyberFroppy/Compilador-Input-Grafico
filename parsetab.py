
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaCOLON SEMICOLON LBRACKET RBRACKET EQUAL DBEQUALS NOTEQUAL GREATERT LESST GREATEREQUAL LESSEQUAL AND OR LPAREN RPAREN DOT COMA PLUS MINUS MULTIPLY DIVIDE CTESTRING CTEINT CTEF CTEC TRANSPUESTA DETERMINANTE INVERSA ID COMMENT PROGRAM MAIN VAR INT FLOAT CHAR PRINT IF ELSE TO WHILE DO FOR VOID MODULE RETURN WRITE READprograma : PROGRAM ID SEMICOLON vars module main\n                | PROGRAM ID SEMICOLON module main\n                | PROGRAM ID SEMICOLON vars main\n                | PROGRAM ID SEMICOLON mainmain : MAIN n_seen_func_name n_seen_main bloque_module n_end_programvars : VAR vars_auxvars_aux : ID n_seen_var_name COLON tipo n_set_var_type SEMICOLON vars_aux\n                | ID n_seen_var_name COLON tipo n_set_var_type DOTvars_func : ID n_seen_var_name COLON tipo n_set_var_type n_save_param_type COMA vars_func\n                 | ID n_seen_var_name COLON tipo n_set_var_type n_save_param_typetipo : INT n_seen_type\n            | FLOAT n_seen_type\n            | CHAR n_seen_typebloque_module : LBRACKET vars estatuto_aux RBRACKET\n                     | LBRACKET vars RBRACKET\n                     | LBRACKET estatuto_aux RBRACKET\n                     | LBRACKET RBRACKET bloque : LBRACKET estatuto_aux RBRACKET\n              | LBRACKET RBRACKETestatuto_aux : estatuto estatuto_aux\n                    | estatutoestatuto : asignacion SEMICOLON\n                | condicion SEMICOLON\n                | escritura SEMICOLON\n                | lectura SEMICOLON\n                | return SEMICOLON\n                | for SEMICOLON\n                | while SEMICOLON\n                | call_module SEMICOLON\n                asignacion : ID n_seen_factor_id EQUAL n_add_operator expresion n_assignexpresion : exp n_gen_and AND n_add_operator expresion\n                 | exp n_gen_and exp : exp_aux n_gen_or OR n_add_operator exp\n           | exp_aux n_gen_or exp_aux : exp_aux2 n_gen_relational GREATERT n_add_operator exp_aux\n               | exp_aux2 n_gen_relational LESST n_add_operator exp_aux\n               | exp_aux2 n_gen_relational NOTEQUAL n_add_operator exp_aux\n               | exp_aux2 n_gen_relational DBEQUALS n_add_operator exp_aux\n               | exp_aux2 n_gen_relational GREATEREQUAL n_add_operator exp_aux\n               | exp_aux2 n_gen_relational LESSEQUAL n_add_operator exp_aux\n               | exp_aux2 n_gen_relational exp_aux2 : term n_gen_term PLUS n_add_operator exp_aux2 \n                | term n_gen_term MINUS n_add_operator exp_aux2\n                | term n_gen_termterm : factor n_gen_factor MULTIPLY n_add_operator term \n            | factor n_gen_factor DIVIDE n_add_operator term \n            | factor n_gen_factorfactor : LPAREN n_push_fake_bottom expresion RPAREN n_pop_fake_bottom\n              | CTEINT n_seen_factor_int\n              | CTEF n_seen_factor_float\n              | CTEC n_seen_factor_char\n              | ID n_seen_factor_idmodule : MODULE VOID n_seen_type ID n_seen_func_name params n_gen_func_quad bloque_module n_endfunc module \n              | MODULE tipo ID n_seen_func_name params n_gen_func_quad bloque_module n_endfunc module \n              | MODULE VOID n_seen_type ID n_seen_func_name params n_gen_func_quad bloque_module n_endfunc\n              | MODULE tipo ID n_seen_func_name params n_gen_func_quad bloque_module n_endfuncparams : LPAREN vars_func RPAREN\n              | LPAREN RPARENcall_module : ID n_func_exist n_gen_era LPAREN aux_call_module n_verify_num_params RPAREN n_gen_gosub\n                   | ID n_func_exist n_gen_era LPAREN RPAREN n_gen_gosubaux_call_module : expresion n_check_param\n                       | expresion n_check_param n_param_counter COMA aux_call_modulereturn : RETURN n_search_return_func LPAREN expresion RPAREN n_return_quadfor : FOR ID EQUAL expresion TO expresion DO  bloque while : WHILE n_salto_while LPAREN expresion RPAREN n_cond_while bloque n_ret_while condicion : IF LPAREN expresion RPAREN n_check_exp bloque ELSE n_else bloque n_fill_end\n                 | IF LPAREN expresion RPAREN n_check_exp bloque n_fill_endlectura : READ LPAREN lect_aux RPARENlect_aux : ID n_read\n                | ID n_read COMA lect_auxescritura : PRINT LPAREN escritura_aux RPARENescritura_aux : expresion n_print COMA escritura_aux\n                     | CTESTRING n_seen_string n_print COMA escritura_aux\n                     | expresion n_print\n                     | CTESTRING n_seen_string n_printn_seen_type : n_seen_var_name : n_set_var_type : n_seen_factor_id : n_seen_factor_int : n_seen_factor_float : n_seen_factor_char : n_seen_string : n_assign : n_add_operator : n_gen_term : n_gen_factor : n_gen_relational : n_gen_or : n_gen_and : n_push_fake_bottom : n_pop_fake_bottom : n_seen_main : n_check_exp : n_fill_end : n_else : n_salto_while :n_cond_while :n_ret_while :n_read : n_print : n_save_param_type : n_gen_func_quad : n_seen_func_name : n_endfunc : n_func_exist : n_gen_era : n_verify_num_params : n_param_counter : n_check_param : n_gen_gosub : n_search_return_func :n_return_quad : n_end_program : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,7,12,13,22,33,39,42,66,67,91,],[0,-4,-3,-2,-1,-114,-5,-17,-15,-16,-14,]),'ID':([2,8,14,16,17,18,19,20,24,26,27,28,34,38,40,43,57,69,70,71,72,73,74,75,76,79,80,81,85,86,92,94,110,111,112,113,117,118,119,147,148,149,150,151,152,153,154,155,156,157,158,159,161,163,173,174,175,176,177,178,179,180,181,182,183,184,185,187,215,217,],[3,15,-6,-76,25,-76,-76,-76,31,-11,-12,-13,52,64,52,52,83,-22,-23,-24,-25,-26,-27,-28,-29,104,104,109,15,-8,-85,-91,104,104,104,-7,104,104,104,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,104,109,104,52,104,104,104,104,104,104,104,104,104,104,104,104,104,64,104,]),'SEMICOLON':([3,18,19,20,26,27,28,35,44,45,46,47,48,49,50,51,59,96,97,98,99,100,101,102,103,104,121,122,123,124,125,126,127,128,129,130,133,141,143,162,167,169,171,172,189,193,195,197,199,200,201,202,203,204,205,206,207,208,209,210,211,214,216,219,220,221,224,225,],[4,-76,-76,-76,-11,-12,-13,-78,69,70,71,72,73,74,75,76,85,-90,-89,-88,-86,-87,-80,-81,-82,-79,-32,-34,-41,-44,-47,-49,-50,-51,-52,-71,-68,-84,-111,-113,-30,-60,-92,-95,-63,-111,-48,-67,-19,-31,-33,-35,-36,-37,-38,-39,-40,-42,-43,-45,-46,-99,-59,-18,-64,-65,-95,-66,]),'VAR':([4,34,],[8,8,]),'MODULE':([4,5,14,42,66,67,86,88,91,113,114,115,138,],[9,9,-6,-17,-15,-16,-8,-105,-14,-7,-105,9,9,]),'MAIN':([4,5,6,11,14,42,66,67,86,88,91,113,114,115,138,139,165,],[10,10,10,10,-6,-17,-15,-16,-8,-105,-14,-7,-105,-56,-55,-54,-53,]),'VOID':([9,],[16,]),'INT':([9,30,116,],[18,18,18,]),'FLOAT':([9,30,116,],[19,19,19,]),'CHAR':([9,30,116,],[20,20,20,]),'LBRACKET':([10,21,29,37,60,61,63,87,89,120,146,164,191,196,213,218,],[-104,-93,34,-103,-103,34,-58,34,-57,-94,173,-98,173,-96,173,173,]),'RBRACKET':([14,34,40,41,43,65,68,69,70,71,72,73,74,75,76,86,113,173,198,],[-6,42,66,67,-21,91,-20,-22,-23,-24,-25,-26,-27,-28,-29,-8,-7,199,219,]),'IF':([14,34,40,43,69,70,71,72,73,74,75,76,86,113,173,],[-6,53,53,53,-22,-23,-24,-25,-26,-27,-28,-29,-8,-7,53,]),'PRINT':([14,34,40,43,69,70,71,72,73,74,75,76,86,113,173,],[-6,54,54,54,-22,-23,-24,-25,-26,-27,-28,-29,-8,-7,54,]),'READ':([14,34,40,43,69,70,71,72,73,74,75,76,86,113,173,],[-6,55,55,55,-22,-23,-24,-25,-26,-27,-28,-29,-8,-7,55,]),'RETURN':([14,34,40,43,69,70,71,72,73,74,75,76,86,113,173,],[-6,56,56,56,-22,-23,-24,-25,-26,-27,-28,-29,-8,-7,56,]),'FOR':([14,34,40,43,69,70,71,72,73,74,75,76,86,113,173,],[-6,57,57,57,-22,-23,-24,-25,-26,-27,-28,-29,-8,-7,57,]),'WHILE':([14,34,40,43,69,70,71,72,73,74,75,76,86,113,173,],[-6,58,58,58,-22,-23,-24,-25,-26,-27,-28,-29,-8,-7,58,]),'COLON':([15,23,64,90,],[-77,30,-77,116,]),'DOT':([18,19,20,26,27,28,35,59,],[-76,-76,-76,-11,-12,-13,-78,86,]),'COMA':([18,19,20,26,27,28,96,97,98,99,100,101,102,103,104,106,107,109,121,122,123,124,125,126,127,128,129,131,132,134,140,144,160,166,170,171,192,194,195,200,201,202,203,204,205,206,207,208,209,210,211,],[-76,-76,-76,-11,-12,-13,-90,-89,-88,-86,-87,-80,-81,-82,-79,-101,-83,-100,-32,-34,-41,-44,-47,-49,-50,-51,-52,159,-101,161,-78,-110,187,-102,-109,-92,215,217,-48,-31,-33,-35,-36,-37,-38,-39,-40,-42,-43,-45,-46,]),'RPAREN':([18,19,20,26,27,28,38,62,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,118,121,122,123,124,125,126,127,128,129,131,132,134,135,137,140,142,144,145,160,166,168,170,171,186,188,192,195,200,201,202,203,204,205,206,207,208,209,210,211,212,222,223,],[-76,-76,-76,-11,-12,-13,63,89,120,-90,-89,-88,-86,-87,-80,-81,-82,-79,130,-101,-83,133,-100,143,-32,-34,-41,-44,-47,-49,-50,-51,-52,-74,-101,-69,162,164,-78,-108,-110,171,-75,-102,193,-61,-92,-72,-70,-10,-48,-31,-33,-35,-36,-37,-38,-39,-40,-42,-43,-45,-46,-73,-9,-62,]),'LPAREN':([25,31,32,36,52,53,54,55,56,58,78,79,80,82,84,92,93,94,110,111,112,117,118,119,147,148,149,150,151,152,153,154,155,156,157,158,159,163,174,175,176,177,178,179,180,181,182,183,184,185,187,217,],[-104,-104,38,38,-106,79,80,81,-112,-97,-107,94,94,110,112,-85,118,-91,94,94,94,94,94,94,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'EQUAL':([52,77,83,],[-79,92,111,]),'CTEINT':([79,80,92,94,110,111,112,117,118,119,147,148,149,150,151,152,153,154,155,156,157,158,159,163,174,175,176,177,178,179,180,181,182,183,184,185,187,217,],[101,101,-85,-91,101,101,101,101,101,101,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'CTEF':([79,80,92,94,110,111,112,117,118,119,147,148,149,150,151,152,153,154,155,156,157,158,159,163,174,175,176,177,178,179,180,181,182,183,184,185,187,217,],[102,102,-85,-91,102,102,102,102,102,102,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'CTEC':([79,80,92,94,110,111,112,117,118,119,147,148,149,150,151,152,153,154,155,156,157,158,159,163,174,175,176,177,178,179,180,181,182,183,184,185,187,217,],[103,103,-85,-91,103,103,103,103,103,103,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,-85,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'CTESTRING':([80,159,187,],[107,107,107,]),'AND':([96,97,98,99,100,101,102,103,104,121,122,123,124,125,126,127,128,129,171,195,201,202,203,204,205,206,207,208,209,210,211,],[-90,-89,-88,-86,-87,-80,-81,-82,-79,147,-34,-41,-44,-47,-49,-50,-51,-52,-92,-48,-33,-35,-36,-37,-38,-39,-40,-42,-43,-45,-46,]),'TO':([96,97,98,99,100,101,102,103,104,121,122,123,124,125,126,127,128,129,136,171,195,200,201,202,203,204,205,206,207,208,209,210,211,],[-90,-89,-88,-86,-87,-80,-81,-82,-79,-32,-34,-41,-44,-47,-49,-50,-51,-52,163,-92,-48,-31,-33,-35,-36,-37,-38,-39,-40,-42,-43,-45,-46,]),'DO':([96,97,98,99,100,101,102,103,104,121,122,123,124,125,126,127,128,129,171,190,195,200,201,202,203,204,205,206,207,208,209,210,211,],[-90,-89,-88,-86,-87,-80,-81,-82,-79,-32,-34,-41,-44,-47,-49,-50,-51,-52,-92,213,-48,-31,-33,-35,-36,-37,-38,-39,-40,-42,-43,-45,-46,]),'OR':([97,98,99,100,101,102,103,104,122,123,124,125,126,127,128,129,171,195,202,203,204,205,206,207,208,209,210,211,],[-89,-88,-86,-87,-80,-81,-82,-79,148,-41,-44,-47,-49,-50,-51,-52,-92,-48,-35,-36,-37,-38,-39,-40,-42,-43,-45,-46,]),'GREATERT':([98,99,100,101,102,103,104,123,124,125,126,127,128,129,171,195,208,209,210,211,],[-88,-86,-87,-80,-81,-82,-79,149,-44,-47,-49,-50,-51,-52,-92,-48,-42,-43,-45,-46,]),'LESST':([98,99,100,101,102,103,104,123,124,125,126,127,128,129,171,195,208,209,210,211,],[-88,-86,-87,-80,-81,-82,-79,150,-44,-47,-49,-50,-51,-52,-92,-48,-42,-43,-45,-46,]),'NOTEQUAL':([98,99,100,101,102,103,104,123,124,125,126,127,128,129,171,195,208,209,210,211,],[-88,-86,-87,-80,-81,-82,-79,151,-44,-47,-49,-50,-51,-52,-92,-48,-42,-43,-45,-46,]),'DBEQUALS':([98,99,100,101,102,103,104,123,124,125,126,127,128,129,171,195,208,209,210,211,],[-88,-86,-87,-80,-81,-82,-79,152,-44,-47,-49,-50,-51,-52,-92,-48,-42,-43,-45,-46,]),'GREATEREQUAL':([98,99,100,101,102,103,104,123,124,125,126,127,128,129,171,195,208,209,210,211,],[-88,-86,-87,-80,-81,-82,-79,153,-44,-47,-49,-50,-51,-52,-92,-48,-42,-43,-45,-46,]),'LESSEQUAL':([98,99,100,101,102,103,104,123,124,125,126,127,128,129,171,195,208,209,210,211,],[-88,-86,-87,-80,-81,-82,-79,154,-44,-47,-49,-50,-51,-52,-92,-48,-42,-43,-45,-46,]),'PLUS':([99,100,101,102,103,104,124,125,126,127,128,129,171,195,210,211,],[-86,-87,-80,-81,-82,-79,155,-47,-49,-50,-51,-52,-92,-48,-45,-46,]),'MINUS':([99,100,101,102,103,104,124,125,126,127,128,129,171,195,210,211,],[-86,-87,-80,-81,-82,-79,156,-47,-49,-50,-51,-52,-92,-48,-45,-46,]),'MULTIPLY':([100,101,102,103,104,125,126,127,128,129,171,195,],[-87,-80,-81,-82,-79,157,-49,-50,-51,-52,-92,-48,]),'DIVIDE':([100,101,102,103,104,125,126,127,128,129,171,195,],[-87,-80,-81,-82,-79,158,-49,-50,-51,-52,-92,-48,]),'ELSE':([172,199,219,],[196,-19,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'vars':([4,34,],[5,40,]),'module':([4,5,115,138,],[6,11,139,165,]),'main':([4,5,6,11,],[7,12,13,22,]),'vars_aux':([8,85,],[14,113,]),'tipo':([9,30,116,],[17,35,140,]),'n_seen_func_name':([10,25,31,],[21,32,36,]),'n_seen_var_name':([15,64,],[23,90,]),'n_seen_type':([16,18,19,20,],[24,26,27,28,]),'n_seen_main':([21,],[29,]),'bloque_module':([29,61,87,],[33,88,114,]),'params':([32,36,],[37,60,]),'n_end_program':([33,],[39,]),'estatuto_aux':([34,40,43,173,],[41,65,68,198,]),'estatuto':([34,40,43,173,],[43,43,43,43,]),'asignacion':([34,40,43,173,],[44,44,44,44,]),'condicion':([34,40,43,173,],[45,45,45,45,]),'escritura':([34,40,43,173,],[46,46,46,46,]),'lectura':([34,40,43,173,],[47,47,47,47,]),'return':([34,40,43,173,],[48,48,48,48,]),'for':([34,40,43,173,],[49,49,49,49,]),'while':([34,40,43,173,],[50,50,50,50,]),'call_module':([34,40,43,173,],[51,51,51,51,]),'n_set_var_type':([35,140,],[59,166,]),'n_gen_func_quad':([37,60,],[61,87,]),'vars_func':([38,215,],[62,222,]),'n_seen_factor_id':([52,104,],[77,129,]),'n_func_exist':([52,],[78,]),'n_search_return_func':([56,],[82,]),'n_salto_while':([58,],[84,]),'n_gen_era':([78,],[93,]),'expresion':([79,80,110,111,112,117,118,119,159,163,174,187,217,],[95,106,135,136,137,141,144,145,106,190,200,106,144,]),'exp':([79,80,110,111,112,117,118,119,159,163,174,175,187,217,],[96,96,96,96,96,96,96,96,96,96,96,201,96,96,]),'exp_aux':([79,80,110,111,112,117,118,119,159,163,174,175,176,177,178,179,180,181,187,217,],[97,97,97,97,97,97,97,97,97,97,97,97,202,203,204,205,206,207,97,97,]),'exp_aux2':([79,80,110,111,112,117,118,119,159,163,174,175,176,177,178,179,180,181,182,183,187,217,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,208,209,98,98,]),'term':([79,80,110,111,112,117,118,119,159,163,174,175,176,177,178,179,180,181,182,183,184,185,187,217,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,210,211,99,99,]),'factor':([79,80,110,111,112,117,118,119,159,163,174,175,176,177,178,179,180,181,182,183,184,185,187,217,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'escritura_aux':([80,159,187,],[105,186,212,]),'lect_aux':([81,161,],[108,188,]),'n_endfunc':([88,114,],[115,138,]),'n_add_operator':([92,147,148,149,150,151,152,153,154,155,156,157,158,],[117,174,175,176,177,178,179,180,181,182,183,184,185,]),'n_push_fake_bottom':([94,],[119,]),'n_gen_and':([96,],[121,]),'n_gen_or':([97,],[122,]),'n_gen_relational':([98,],[123,]),'n_gen_term':([99,],[124,]),'n_gen_factor':([100,],[125,]),'n_seen_factor_int':([101,],[126,]),'n_seen_factor_float':([102,],[127,]),'n_seen_factor_char':([103,],[128,]),'n_print':([106,132,],[131,160,]),'n_seen_string':([107,],[132,]),'n_read':([109,],[134,]),'aux_call_module':([118,217,],[142,223,]),'n_check_exp':([120,],[146,]),'n_assign':([141,],[167,]),'n_verify_num_params':([142,],[168,]),'n_gen_gosub':([143,193,],[169,216,]),'n_check_param':([144,],[170,]),'bloque':([146,191,213,218,],[172,214,220,224,]),'n_return_quad':([162,],[189,]),'n_cond_while':([164,],[191,]),'n_save_param_type':([166,],[192,]),'n_param_counter':([170,],[194,]),'n_pop_fake_bottom':([171,],[195,]),'n_fill_end':([172,224,],[197,225,]),'n_else':([196,],[218,]),'n_ret_while':([214,],[221,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM ID SEMICOLON vars module main','programa',6,'p_programa','lexerparser.py',448),
  ('programa -> PROGRAM ID SEMICOLON module main','programa',5,'p_programa','lexerparser.py',449),
  ('programa -> PROGRAM ID SEMICOLON vars main','programa',5,'p_programa','lexerparser.py',450),
  ('programa -> PROGRAM ID SEMICOLON main','programa',4,'p_programa','lexerparser.py',451),
  ('main -> MAIN n_seen_func_name n_seen_main bloque_module n_end_program','main',5,'p_main','lexerparser.py',456),
  ('vars -> VAR vars_aux','vars',2,'p_vars','lexerparser.py',460),
  ('vars_aux -> ID n_seen_var_name COLON tipo n_set_var_type SEMICOLON vars_aux','vars_aux',7,'p_vars_aux','lexerparser.py',464),
  ('vars_aux -> ID n_seen_var_name COLON tipo n_set_var_type DOT','vars_aux',6,'p_vars_aux','lexerparser.py',465),
  ('vars_func -> ID n_seen_var_name COLON tipo n_set_var_type n_save_param_type COMA vars_func','vars_func',8,'p_vars_func','lexerparser.py',468),
  ('vars_func -> ID n_seen_var_name COLON tipo n_set_var_type n_save_param_type','vars_func',6,'p_vars_func','lexerparser.py',469),
  ('tipo -> INT n_seen_type','tipo',2,'p_tipo','lexerparser.py',472),
  ('tipo -> FLOAT n_seen_type','tipo',2,'p_tipo','lexerparser.py',473),
  ('tipo -> CHAR n_seen_type','tipo',2,'p_tipo','lexerparser.py',474),
  ('bloque_module -> LBRACKET vars estatuto_aux RBRACKET','bloque_module',4,'p_bloque_module','lexerparser.py',478),
  ('bloque_module -> LBRACKET vars RBRACKET','bloque_module',3,'p_bloque_module','lexerparser.py',479),
  ('bloque_module -> LBRACKET estatuto_aux RBRACKET','bloque_module',3,'p_bloque_module','lexerparser.py',480),
  ('bloque_module -> LBRACKET RBRACKET','bloque_module',2,'p_bloque_module','lexerparser.py',481),
  ('bloque -> LBRACKET estatuto_aux RBRACKET','bloque',3,'p_bloque','lexerparser.py',485),
  ('bloque -> LBRACKET RBRACKET','bloque',2,'p_bloque','lexerparser.py',486),
  ('estatuto_aux -> estatuto estatuto_aux','estatuto_aux',2,'p_estatuto_aux','lexerparser.py',490),
  ('estatuto_aux -> estatuto','estatuto_aux',1,'p_estatuto_aux','lexerparser.py',491),
  ('estatuto -> asignacion SEMICOLON','estatuto',2,'p_estatuto','lexerparser.py',495),
  ('estatuto -> condicion SEMICOLON','estatuto',2,'p_estatuto','lexerparser.py',496),
  ('estatuto -> escritura SEMICOLON','estatuto',2,'p_estatuto','lexerparser.py',497),
  ('estatuto -> lectura SEMICOLON','estatuto',2,'p_estatuto','lexerparser.py',498),
  ('estatuto -> return SEMICOLON','estatuto',2,'p_estatuto','lexerparser.py',499),
  ('estatuto -> for SEMICOLON','estatuto',2,'p_estatuto','lexerparser.py',500),
  ('estatuto -> while SEMICOLON','estatuto',2,'p_estatuto','lexerparser.py',501),
  ('estatuto -> call_module SEMICOLON','estatuto',2,'p_estatuto','lexerparser.py',502),
  ('asignacion -> ID n_seen_factor_id EQUAL n_add_operator expresion n_assign','asignacion',6,'p_asignacion','lexerparser.py',507),
  ('expresion -> exp n_gen_and AND n_add_operator expresion','expresion',5,'p_expresion','lexerparser.py',511),
  ('expresion -> exp n_gen_and','expresion',2,'p_expresion','lexerparser.py',512),
  ('exp -> exp_aux n_gen_or OR n_add_operator exp','exp',5,'p_exp','lexerparser.py',516),
  ('exp -> exp_aux n_gen_or','exp',2,'p_exp','lexerparser.py',517),
  ('exp_aux -> exp_aux2 n_gen_relational GREATERT n_add_operator exp_aux','exp_aux',5,'p_exp_aux','lexerparser.py',521),
  ('exp_aux -> exp_aux2 n_gen_relational LESST n_add_operator exp_aux','exp_aux',5,'p_exp_aux','lexerparser.py',522),
  ('exp_aux -> exp_aux2 n_gen_relational NOTEQUAL n_add_operator exp_aux','exp_aux',5,'p_exp_aux','lexerparser.py',523),
  ('exp_aux -> exp_aux2 n_gen_relational DBEQUALS n_add_operator exp_aux','exp_aux',5,'p_exp_aux','lexerparser.py',524),
  ('exp_aux -> exp_aux2 n_gen_relational GREATEREQUAL n_add_operator exp_aux','exp_aux',5,'p_exp_aux','lexerparser.py',525),
  ('exp_aux -> exp_aux2 n_gen_relational LESSEQUAL n_add_operator exp_aux','exp_aux',5,'p_exp_aux','lexerparser.py',526),
  ('exp_aux -> exp_aux2 n_gen_relational','exp_aux',2,'p_exp_aux','lexerparser.py',527),
  ('exp_aux2 -> term n_gen_term PLUS n_add_operator exp_aux2','exp_aux2',5,'p_exp_aux2','lexerparser.py',531),
  ('exp_aux2 -> term n_gen_term MINUS n_add_operator exp_aux2','exp_aux2',5,'p_exp_aux2','lexerparser.py',532),
  ('exp_aux2 -> term n_gen_term','exp_aux2',2,'p_exp_aux2','lexerparser.py',533),
  ('term -> factor n_gen_factor MULTIPLY n_add_operator term','term',5,'p_term','lexerparser.py',537),
  ('term -> factor n_gen_factor DIVIDE n_add_operator term','term',5,'p_term','lexerparser.py',538),
  ('term -> factor n_gen_factor','term',2,'p_term','lexerparser.py',539),
  ('factor -> LPAREN n_push_fake_bottom expresion RPAREN n_pop_fake_bottom','factor',5,'p_factor','lexerparser.py',543),
  ('factor -> CTEINT n_seen_factor_int','factor',2,'p_factor','lexerparser.py',544),
  ('factor -> CTEF n_seen_factor_float','factor',2,'p_factor','lexerparser.py',545),
  ('factor -> CTEC n_seen_factor_char','factor',2,'p_factor','lexerparser.py',546),
  ('factor -> ID n_seen_factor_id','factor',2,'p_factor','lexerparser.py',547),
  ('module -> MODULE VOID n_seen_type ID n_seen_func_name params n_gen_func_quad bloque_module n_endfunc module','module',10,'p_module','lexerparser.py',552),
  ('module -> MODULE tipo ID n_seen_func_name params n_gen_func_quad bloque_module n_endfunc module','module',9,'p_module','lexerparser.py',553),
  ('module -> MODULE VOID n_seen_type ID n_seen_func_name params n_gen_func_quad bloque_module n_endfunc','module',9,'p_module','lexerparser.py',554),
  ('module -> MODULE tipo ID n_seen_func_name params n_gen_func_quad bloque_module n_endfunc','module',8,'p_module','lexerparser.py',555),
  ('params -> LPAREN vars_func RPAREN','params',3,'p_params','lexerparser.py',558),
  ('params -> LPAREN RPAREN','params',2,'p_params','lexerparser.py',559),
  ('call_module -> ID n_func_exist n_gen_era LPAREN aux_call_module n_verify_num_params RPAREN n_gen_gosub','call_module',8,'p_call_module','lexerparser.py',562),
  ('call_module -> ID n_func_exist n_gen_era LPAREN RPAREN n_gen_gosub','call_module',6,'p_call_module','lexerparser.py',563),
  ('aux_call_module -> expresion n_check_param','aux_call_module',2,'p_aux_call_module','lexerparser.py',566),
  ('aux_call_module -> expresion n_check_param n_param_counter COMA aux_call_module','aux_call_module',5,'p_aux_call_module','lexerparser.py',567),
  ('return -> RETURN n_search_return_func LPAREN expresion RPAREN n_return_quad','return',6,'p_return','lexerparser.py',570),
  ('for -> FOR ID EQUAL expresion TO expresion DO bloque','for',8,'p_for','lexerparser.py',574),
  ('while -> WHILE n_salto_while LPAREN expresion RPAREN n_cond_while bloque n_ret_while','while',8,'p_while','lexerparser.py',578),
  ('condicion -> IF LPAREN expresion RPAREN n_check_exp bloque ELSE n_else bloque n_fill_end','condicion',10,'p_condicion','lexerparser.py',582),
  ('condicion -> IF LPAREN expresion RPAREN n_check_exp bloque n_fill_end','condicion',7,'p_condicion','lexerparser.py',583),
  ('lectura -> READ LPAREN lect_aux RPAREN','lectura',4,'p_lectura','lexerparser.py',586),
  ('lect_aux -> ID n_read','lect_aux',2,'p_lectura_aux','lexerparser.py',590),
  ('lect_aux -> ID n_read COMA lect_aux','lect_aux',4,'p_lectura_aux','lexerparser.py',591),
  ('escritura -> PRINT LPAREN escritura_aux RPAREN','escritura',4,'p_escritura','lexerparser.py',594),
  ('escritura_aux -> expresion n_print COMA escritura_aux','escritura_aux',4,'p_escritura_aux','lexerparser.py',598),
  ('escritura_aux -> CTESTRING n_seen_string n_print COMA escritura_aux','escritura_aux',5,'p_escritura_aux','lexerparser.py',599),
  ('escritura_aux -> expresion n_print','escritura_aux',2,'p_escritura_aux','lexerparser.py',600),
  ('escritura_aux -> CTESTRING n_seen_string n_print','escritura_aux',3,'p_escritura_aux','lexerparser.py',601),
  ('n_seen_type -> <empty>','n_seen_type',0,'p_n_seen_type','lexerparser.py',621),
  ('n_seen_var_name -> <empty>','n_seen_var_name',0,'p_n_seen_var_name','lexerparser.py',627),
  ('n_set_var_type -> <empty>','n_set_var_type',0,'p_n_set_var_type','lexerparser.py',720),
  ('n_seen_factor_id -> <empty>','n_seen_factor_id',0,'p_n_seen_factor_id','lexerparser.py',751),
  ('n_seen_factor_int -> <empty>','n_seen_factor_int',0,'p_n_seen_factor_int','lexerparser.py',758),
  ('n_seen_factor_float -> <empty>','n_seen_factor_float',0,'p_n_seen_factor_float','lexerparser.py',771),
  ('n_seen_factor_char -> <empty>','n_seen_factor_char',0,'p_n_seen_factor_char','lexerparser.py',784),
  ('n_seen_string -> <empty>','n_seen_string',0,'p_n_seen_string','lexerparser.py',798),
  ('n_assign -> <empty>','n_assign',0,'p_n_assign','lexerparser.py',812),
  ('n_add_operator -> <empty>','n_add_operator',0,'p_n_add_operator','lexerparser.py',827),
  ('n_gen_term -> <empty>','n_gen_term',0,'p_n_gen_term','lexerparser.py',833),
  ('n_gen_factor -> <empty>','n_gen_factor',0,'p_n_gen_factor','lexerparser.py',838),
  ('n_gen_relational -> <empty>','n_gen_relational',0,'p_n_gen_relational','lexerparser.py',843),
  ('n_gen_or -> <empty>','n_gen_or',0,'p_n_gen_or','lexerparser.py',849),
  ('n_gen_and -> <empty>','n_gen_and',0,'p_n_gen_and','lexerparser.py',854),
  ('n_push_fake_bottom -> <empty>','n_push_fake_bottom',0,'p_n_push_fake_bottom','lexerparser.py',860),
  ('n_pop_fake_bottom -> <empty>','n_pop_fake_bottom',0,'p_n_pop_fake_bottom','lexerparser.py',866),
  ('n_seen_main -> <empty>','n_seen_main',0,'p_n_seen_main','lexerparser.py',895),
  ('n_check_exp -> <empty>','n_check_exp',0,'p_n_check_exp','lexerparser.py',903),
  ('n_fill_end -> <empty>','n_fill_end',0,'p_n_fill_end','lexerparser.py',916),
  ('n_else -> <empty>','n_else',0,'p_n_else','lexerparser.py',923),
  ('n_salto_while -> <empty>','n_salto_while',0,'p_n_salto_while','lexerparser.py',935),
  ('n_cond_while -> <empty>','n_cond_while',0,'p_n_cond_while','lexerparser.py',941),
  ('n_ret_while -> <empty>','n_ret_while',0,'p_n_ret_while','lexerparser.py',954),
  ('n_read -> <empty>','n_read',0,'p_n_read','lexerparser.py',1011),
  ('n_print -> <empty>','n_print',0,'p_n_print','lexerparser.py',1019),
  ('n_save_param_type -> <empty>','n_save_param_type',0,'p_n_save_param_type','lexerparser.py',1031),
  ('n_gen_func_quad -> <empty>','n_gen_func_quad',0,'p_n_gen_funcquad','lexerparser.py',1037),
  ('n_seen_func_name -> <empty>','n_seen_func_name',0,'p_n_seen_func_name','lexerparser.py',1043),
  ('n_endfunc -> <empty>','n_endfunc',0,'p_n_endfunc','lexerparser.py',1074),
  ('n_func_exist -> <empty>','n_func_exist',0,'p_n_func_exist','lexerparser.py',1088),
  ('n_gen_era -> <empty>','n_gen_era',0,'p_n_gen_era','lexerparser.py',1096),
  ('n_verify_num_params -> <empty>','n_verify_num_params',0,'p_n_verify_num_params','lexerparser.py',1105),
  ('n_param_counter -> <empty>','n_param_counter',0,'p_n_param_counter','lexerparser.py',1114),
  ('n_check_param -> <empty>','n_check_param',0,'p_n_check_param','lexerparser.py',1120),
  ('n_gen_gosub -> <empty>','n_gen_gosub',0,'p_n_gen_gosub','lexerparser.py',1142),
  ('n_search_return_func -> <empty>','n_search_return_func',0,'p_n_search_return_func','lexerparser.py',1151),
  ('n_return_quad -> <empty>','n_return_quad',0,'p_n_return_quad','lexerparser.py',1161),
  ('n_end_program -> <empty>','n_end_program',0,'p_n_end_program','lexerparser.py',1183),
]
